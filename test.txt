Git for windows
设置用户名和邮箱：
git config --global user.name ""
git config --global user.email ""

创建版 本库： 
1.mkdir xxx
2.git init                //初始化
3.ls -ah                 //查看 .git目录
4.在xxx目录下新建文件：test.txt
5.git status            //查看目录状态
6.git add xxx           //更新文件
7.git commit -m "remarks"   //添加备注说明更新

版本退回：
git log              // 查看历史更新记录
git reset --hard HEAD^^ /HEAD~100 /指定commit_id   //退回到上一版本或者上100版本或者指定版本
git reflog    //查看每次命令
git diff HEAD commit_id    // 和上一次提交版本的内容进行对比

工作原理：
  创建一个版本库名叫:test 实际是工作区，git init之后会生成一个.git 里面有个index/stag称为暂存区，在text目录下创建一个文件：ceshi.txt，修改后通过git add ceshi.txt 将它存放到暂存区，接着通过git commit命令提交文件。此时在 .git 文件内自动创建的一个分支叫master，并且有一个指向master的指针叫HEAD，commit的作用就是想 master分支提交更改。

撤销修改：适用于误删，恢复操作
git checkout --xxx      //丢弃工作区的修改

删除文件：
git rm

远程仓库
 添加远程仓库
1.创建GitHub账号.
2.创建SSH Key:   ssh-keygen -t rsa -C "2102441668@qq.com" 【根目录下生成：id_rsa(私钥) id_rsa.pub(公钥)】
3.登陆GitHub官网绑定id_rsa,pub(添加NEW SSH key)
4.创建远程库（根据提示在本地添加）
5.git remote add origin git@github.com:xiwen-ye/learngit.git  //将本地仓库推送到远程.
6.git push -u origin master    //将修改推送到远程

 从远程仓库克隆
1.创建一个新的仓库:gitskills
2.git clone git@github.com:xiwen-ye/gitskills.git   //cd到git目录在执行。克隆到本地库.

分支管理
  创建与合并分支
1.git branch           //查看分支
2.git checkout xxx    //切换到xxx分区
3.git checkout -b xxx  //创建并切换到xxx分区
4.git merge xxx        //合并指定xxx分区到当前分区
5.git branch -d xxx    //删除xxx分支